version: '3.5'
services:
    
# context broker service
  orion:
    image: fiware/orion:2.4.0
    hostname: orion
    container_name: fiware-orion
    depends_on:
      - mongo-db
    networks:
      - default
    expose:
      - "1026"
    ports:
      - "1026:1026" 
    command: -dbhost mongo-db -logLevel DEBUG
    entrypoint: ["/usr/bin/contextBroker","-fg", "-multiservice", "-ngsiv1Autocast", "-corsOrigin='__ALL'" ]
    healthcheck:
      test: curl --fail -s http://orion:1026/version || exit 1

# Cygnus data persistent
  cygnus:
    image: fiware/cygnus-ngsi:latest
    hostname: cygnus
    container_name: fiware-cygnus
    depends_on:
        - mongo-db
    networks:
        - default
    expose:
        - "5080"
    ports:
        - "5051:5051"
        - "5080:5080"
    environment:
        - "CYGNUS_MONGO_HOSTS=mongo-db:27017"
        - "CYGNUS_LOG_LEVEL=DEBUG"
        - "CYGNUS_SERVICE_PORT=5051"
        - "CYGNUS_API_PORT=5080"

# time series data quantumleap
#   quantumleap:
#     image: smartsdk/quantumleap
#     hostname: quantumleap
#     ports:
#         - "8668:8668"
#     depends_on:
#         - crate-db
#     environment:
#         - CRATE_HOST=crate-db
# # create db
#   crate-db:
#     image: crate:3.1.2
#     hostname: crate-db
#     ports:
#         - "4200:4200"
#         - "4300:4300"
#     command:
#         crate -Clicense.enterprise=false -Cauth.host_based.enabled=false  -Ccluster.name=democluster
#         -Chttp.cors.enabled=true -Chttp.cors.allow-origin="*"
  
# Database
  mongo-db:
    image: mongo:3.6
    hostname: mongo-db
    container_name: db-mongo
    expose:
      - "27017"
    ports:
      - "27017:27017" # localhost:27017
    networks:
      - default
    command: --bind_ip_all --smallfiles
    volumes:
      - mongo-db:/data

#  volumes 
volumes:
  mongo-db: ~