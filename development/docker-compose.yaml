version: '3.5'
services:
  swagger:
    image: swaggerapi/swagger-ui
    container_name: swaggerapi
    hostname: swagger
    depends_on:
      - rest-api
    networks:
      - default
    expose:
      - 8080
    ports:
      - 8029:8080
    environment:
      - API_URL=/swagger.json
    restart: always
    volumes: ["./specification/specification.json:/usr/share/nginx/html/swagger.json"]
        
# context broker service
  orion:
    image: fiware/orion:2.4.0
    hostname: orion
    container_name: fiware-orion
    depends_on:
      - mongo-db
    networks:
      - default
    expose:
      - "1026"
    ports:
      - "1026:1026" 
    command: -dbhost mongo-db -logLevel DEBUG
    entrypoint: ["/usr/bin/contextBroker","-fg", "-multiservice", "-ngsiv1Autocast", "-corsOrigin='__ALL'" ]
    healthcheck:
      test: curl --fail -s http://orion:1026/version || exit 1

# # IOT Agent JSON
#   iot-agent:
#     image: fiware/iotagent-json
#     hostname: iot-agent
#     container_name: fiware-iot-agent
#     depends_on:
#         - mongo-db
#         - orion
#     expose:
#         - "4041"
#         - "7896"
#     ports:
#         - "4041:4041"
#         - "7896:7896"
#     environment:
#         - "IOTA_CB_HOST=orion"
#         - "IOTA_CB_PORT=1026"
#         - "IOTA_NORTH_PORT=4041"
#         - "IOTA_REGISTRY_TYPE=mongodb"
#         - "IOTA_MONGO_HOST=mongo-db"
#         - "IOTA_MONGO_PORT=27017"
#         - "IOTA_MONGO_DB=iotagent-json"
#         - "IOTA_HTTP_PORT=7896"
#         - "IOTA_PROVIDER_URL=http://iot-agent:4041"

# # Cygnus data persistent
#   cygnus:
#     image: fiware/cygnus-ngsi:latest
#     hostname: cygnus
#     container_name: fiware-cygnus
#     depends_on:
#         - mongo-db
#     networks:
#         - default
#     expose:
#         - "5080"
#     ports:
#         - "5051:5051"
#         - "5080:5080"
#     environment:
#         - "CYGNUS_MONGO_HOSTS=mongo-db:27017"
#         - "CYGNUS_LOG_LEVEL=DEBUG"
#         - "CYGNUS_SERVICE_PORT=5051"
#         - "CYGNUS_API_PORT=5080"

# # grafana
#   grafana:
#     image: grafana/grafana
#     depends_on:
#         - crate-db
#     ports:
#         - "3003:3000"
#     environment:
#         - GF_INSTALL_PLUGINS=https://github.com/orchestracities/grafana-map-plugin/archive/master.zip;grafana-map-plugin,grafana-clock-panel,grafana-worldmap-panel
# # time series data quantumleap
#   quantumleap:
#     image: smartsdk/quantumleap
#     hostname: quantumleap
#     ports:
#         - "8668:8668"
#     depends_on:
#         - crate-db
#     environment:
#         - CRATE_HOST=crate-db
# # create db
#   crate-db:
#     image: crate:3.1.2
#     hostname: crate-db
#     ports:
#         - "4200:4200"
#         - "4300:4300"
#     command:
#         crate -Clicense.enterprise=false -Cauth.host_based.enabled=false  -Ccluster.name=democluster
#         -Chttp.cors.enabled=true -Chttp.cors.allow-origin="*"
  
# Database
  mongo-db:
    image: mongo:3.6
    hostname: mongo-db
    container_name: db-mongo
    expose:
      - "27017"
    ports:
      - "27017:27017" # localhost:27017
    networks:
      - default
    command: --bind_ip_all --smallfiles
    volumes:
      - mongo-db:/data

# # cattlechain ledgerSync
#   cattlechain-ledgersync:
#     container_name: cattlechain_ledgersync
#     build:
#       context: ../FIWARE_Cattlechain_LedgerSync
#     environment:
#       VALIDATOR_URL: tcp://validator:4004
#       CONTEXT_BROKER: http://orion:1026
#     depends_on:
#       - cattlechain-tp
#       - orion

# cattlechain client
  cattlechain-client:
    container_name: cattlechain_client
    build:
      context: ../FIWARE_Cattlechain_Client
    expose:
      - 3000
    ports:
      - '3000:3000'
    environment:
      SAWTOOTH_REST_ENDPOINT: 'http://rest-api:8008'
      TP_FAMILY: 'CattleChain'
      TP_VERSION: '0.0.2'
      TP_NAMESPACE: 'ebc4f9'
    depends_on:
      - cattlechain-tp
      - rest-api

# Cattlechain Transaction Processor
  cattlechain-tp:
   container_name: cattlechain_tp
   image: singhhp10691/cattlechain_tp:latest
   environment:
     VALIDATOR_URL: tcp://validator:4004
   depends_on:
     - validator

#  setting transaciton processor
  settings-tp:
    image: hyperledger/sawtooth-settings-tp:1.2
    container_name: sawtooth-settings-tp
    depends_on:
      - validator
    entrypoint: settings-tp -vv -C tcp://validator:4004

# sawtooth rest API
  rest-api:
    image: hyperledger/sawtooth-rest-api:1.2
    container_name: sawtooth-rest-api
    expose:
      - 8008
    ports:
      - '8008:8008'
    depends_on:
      - validator
    entrypoint: sawtooth-rest-api -vv -C tcp://validator:4004 --bind rest-api:8008

# sawtooth validator node
  validator:
    image: hyperledger/sawtooth-validator:1.2
    container_name: sawtooth-validator
    expose:
      - 4004
    ports:
      - '4004:4004'
    command: |
      bash -c "
        if [ ! -f /etc/sawtooth/keys/validator.priv ]; then
          sawadm keygen
          sawtooth keygen my_key
          sawset genesis -k /root/.sawtooth/keys/my_key.priv
          sawset proposal create -k /root/.sawtooth/keys/my_key.priv \
            sawtooth.consensus.algorithm.name=Devmode \
            sawtooth.consensus.algorithm.version=0.1 \
            -o config.batch
          sawadm genesis config-genesis.batch config.batch
        fi;
        sawtooth-validator -vv \
          --endpoint tcp://validator:8800 \
          --bind component:tcp://eth0:4004 \
          --bind network:tcp://eth0:8800 \
          --bind consensus:tcp://eth0:5050
      "
# devmode consensus
  devmode-engine:
    image: hyperledger/sawtooth-devmode-engine-rust:1.2
    expose:
      - 5050
    ports:
      - '5050:5050'
    container_name: sawtooth-devmode-engine-rust-default
    depends_on:
      - validator
    entrypoint: devmode-engine-rust --connect tcp://validator:5050

# sawtooth explorer
  rest-api-proxy:
    image: nginx
    container_name: sawtooth-explorer-rest-api-proxy
    volumes:
      - ../FIWARE_Sawtooth_Explorer/docker/nginx.conf:/etc/nginx/nginx.conf:ro
      - dist-html:/www/ste
    ports:
      - "8090:8090"
      - "8091:8091"
    command: [nginx, '-g', 'daemon off;']
  ng-server:
    build:
      context: ../FIWARE_Sawtooth_Explorer
      args:
        - http_proxy
        - https_proxy
        - no_proxy
    depends_on:
      - rest-api-proxy
    container_name: sawtooth-explorer
    ports:
      - "4100:4100"
    command: npm run start -- --host 0.0.0.0 --port 4100
    environment:
      TEST_WEB_HOST: ng-server
      BASE_URL: http://ng-server:4100
      NG_DOCKER_COMPOSE: "true"
    volumes:
      - ../FIWARE_Sawtooth_Explorer/:/usr/src/app
      - /usr/src/app/node_modules
      - dist-html:/usr/src/dist

#  volumes 
volumes:
  mongo-db: ~
  dist-html:

# network
networks:
  default:
    ipam:
      config:
        - subnet: 172.18.1.0/24
  # postgres:
  #   driver: bridge